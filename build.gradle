plugins {
	id 'org.springframework.boot' version '3.3.0'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'


	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-configuration-processor'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

    // NOTE - wtf is runtime scope and optional aboot
	implementation 'org.springframework.boot:spring-boot-devtools'
    //         <scope>runtime</scope>
    //         <optional>true</optional>

    //         <groupId>io.micrometer</groupId>
	implementation 'io.micrometer:micrometer-registry-prometheus'
    //         <scope>runtime</scope>

    //         <groupId>com.h2database</groupId>
	implementation 'com.h2database:h2'
    //         <scope>runtime</scope>

    //         <groupId>org.projectlombok</groupId>
	implementation 'org.projectlombok:lombok'
    //         <optional>true</optional>

    //         <groupId>com.fasterxml.jackson.core</groupId>
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	testImplementation('org.springframework.boot:spring-boot-starter-test')
    // NOTE - do we need a special target or config for this to generate rest docs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}

test {
	useJUnitPlatform()
}
